# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/evanmedrano/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="smt"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Rails aliases

# Prepending this ruby option to hide warnings from Ruby 2.7.1
# Captialized aliases utilize the ruby option and the lowercase variants do not
RUBY_OPTION='RUBYOPT="-W:no-deprecated -W:no-experimental"'

alias BE="$RUBY_OPTION bundle exec"
alias RC="$RUBY_OPTION rails console"
alias RCS="$RUBY_OPTION rails console --sandbox"
alias RD="$RUBY_OPTION rails destroy"
alias RDB="$RUBY_OPTION rails dbconsole"
alias RDBM="$RUBY_OPTION rails db:migrate"
alias RDBR="$RUBY_OPTION rails db:rollback"
alias RG="$RUBY_OPTION rails generate"
alias RGM="$RUBY_OPTION rails generate migration"
alias RN="$RUBY_OPTION rails new"
alias RP="$RUBY_OPTION rails plugin"
alias RS="$RUBY_OPTION rails server"
alias RSD="$RUBY_OPTION rails server --debugger"
alias RSP="$RUBY_OPTION rails server --port"
alias RU="$RUBY_OPTION rails runner"

alias be="bundle exec"
alias rc="rails console"
alias rcs="rails console --sandbox"
alias rd="rails destroy"
alias rdb="rails dbconsole"
alias rdbm="rails db:migrate"
alias rdbr="rails db:rollback"
alias rg="rails generate"
alias rgm="rails generate migration"
alias rn="rails new"
alias rp="rails plugin"
alias rrg="rails routes | grep"
alias rs="rails server"
alias rsd="rails server --debugger"
alias rsp="rails server --port"
alias ru="rails runner"

function rails_template () {
  rails new $1 -d=postgresql -m ~/code/templates/rails/template.rb
}

function rails_api_template () {
  rails new $1 -d=postgresql -m ~/code/templates/rails/api_template.rb
}

# Quick way to allow the vcr gem to re-record cassettes
alias vcr="VCR=all ./bin/rspec"

# React aliases
alias cra="npx create-react-app"
alias ni="npm install"
alias nis="npm install --save"
alias ns="npm start"

# Git aliases
alias gdp="git diff --patience"
alias gfi="git flow init"
alias gfs="git flow feature start"
alias gff="git flow feature finish"

# Hub shortcuts
alias hc="hub create"
alias hcp="hub create -p"

# Helpful aliases
alias e="exit"
alias tn="terminal-notifier -message 'Finished!'"
alias v="vim ."
alias zr="source ~/.zshrc"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
source /Users/evanmedrano/.oh-my-zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# Enables ctrl + s to work in vim
stty -ixon -ixoff

# Move next only if `homebrew` is installed
if command -v brew >/dev/null 2>&1; then
	# Load rupa's z if installed
	[ -f $(brew --prefix)/etc/profile.d/z.sh ] && source $(brew --prefix)/etc/profile.d/z.sh
fi

# Ensures I'm always running tmux within the shell
_not_inside_tmux() { [[ -z "$TMUX" ]] }

ensure_tmux_is_running() {
  if _not_inside_tmux; then
    ~/code/dotfiles/bin/tat
  fi
}

ensure_tmux_is_running

# Change prompt display
PROMPT='
%{$FG[201]%}Building dreams in %{$FG[002]%}%2~%{$FG[201]%}$(git_prompt_info)
%{$fg[red]%}‰∏çÂ±à%{$reset_color%} $(prompt_char) üé¨ '

RPROMPT='${return_status}$(git_time_since_commit)%{$reset_color%}'

export PATH="$HOME/code/dotfiles/bin:$PATH"

# Detect Ruby version to export ruby option

source /Users/evanmedrano/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
